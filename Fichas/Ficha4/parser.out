Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> lista
Rule 1     lista -> PA elementos PF
Rule 2     lista -> PA PF
Rule 3     elementos -> elementos VIRG elemento
Rule 4     elementos -> elemento
Rule 5     elemento -> NUM
Rule 6     elemento -> ALFANUM

Terminals, with rules where they appear

ALFANUM              : 6
NUM                  : 5
PA                   : 1 2
PF                   : 1 2
VIRG                 : 3
error                : 

Nonterminals, with rules where they appear

elemento             : 3 4
elementos            : 1 3
lista                : 0

Parsing method: LALR

state 0

    (0) S' -> . lista
    (1) lista -> . PA elementos PF
    (2) lista -> . PA PF

    PA              shift and go to state 2

    lista                          shift and go to state 1

state 1

    (0) S' -> lista .



state 2

    (1) lista -> PA . elementos PF
    (2) lista -> PA . PF
    (3) elementos -> . elementos VIRG elemento
    (4) elementos -> . elemento
    (5) elemento -> . NUM
    (6) elemento -> . ALFANUM

    PF              shift and go to state 4
    NUM             shift and go to state 6
    ALFANUM         shift and go to state 7

    elementos                      shift and go to state 3
    elemento                       shift and go to state 5

state 3

    (1) lista -> PA elementos . PF
    (3) elementos -> elementos . VIRG elemento

    PF              shift and go to state 8
    VIRG            shift and go to state 9


state 4

    (2) lista -> PA PF .

    $end            reduce using rule 2 (lista -> PA PF .)


state 5

    (4) elementos -> elemento .

    PF              reduce using rule 4 (elementos -> elemento .)
    VIRG            reduce using rule 4 (elementos -> elemento .)


state 6

    (5) elemento -> NUM .

    PF              reduce using rule 5 (elemento -> NUM .)
    VIRG            reduce using rule 5 (elemento -> NUM .)


state 7

    (6) elemento -> ALFANUM .

    PF              reduce using rule 6 (elemento -> ALFANUM .)
    VIRG            reduce using rule 6 (elemento -> ALFANUM .)


state 8

    (1) lista -> PA elementos PF .

    $end            reduce using rule 1 (lista -> PA elementos PF .)


state 9

    (3) elementos -> elementos VIRG . elemento
    (5) elemento -> . NUM
    (6) elemento -> . ALFANUM

    NUM             shift and go to state 6
    ALFANUM         shift and go to state 7

    elemento                       shift and go to state 10

state 10

    (3) elementos -> elementos VIRG elemento .

    PF              reduce using rule 3 (elementos -> elementos VIRG elemento .)
    VIRG            reduce using rule 3 (elementos -> elementos VIRG elemento .)

